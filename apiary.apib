FORMAT: 1A
HOST: https://architectural-decisions.herokuapp.com

# Decision Architect Server API

<code>NOTE:</code> This document is a **work in progress**.

Designing a software system can be viewed as a sequence of decisions taken. 
In order to make decision documentation available to the complete software 
engineering environment, we needed a central decision repository that allows
to store, access, and update decisions in a multi-tool and multi-user 
environment. This web service provides the functionality to store, to retrieve, to delete and to 
update decisions and related information.

# **Allowed HTTPs requests:**
* <code>POST</code> - To create a resource.
* <code>PUT</code> - To update a resource.
* <code>GET</code> - Get a resource or list of resources.
* <code>DELETE</code> - To delete a resource.

# **Description Of Usual Server Responses:**
* _200_ <code>OK</code> - the request was successful (some API calls may return 201 instead).
* _201_ <code>Created</code> - the request was successful and a resource was created.
* _204_ <code>No Content</code> - the request was successful but there is no representation to return (i.e. the response is empty).
* _400_ <code>Bad Request</code> - the request could not be understood or was missing required parameters.
* _401_ <code>Unauthorized</code> - authentication failed or user doesn't have permissions for requested operation.
* _403_ <code>Forbidden</code> - access denied.
* _404_ <code>Not Found</code> - resource was not found.
* _405_ <code>Method Not Allowed</code> - requested method is not supported for resource.
* _429_ <code>Too Many Requests</code> - exceeded GoodData API limits. Pause requests, wait up to one minute, and try again.
* _503_ <code>Service Unavailable</code> - service is temporary unavailable (e.g. scheduled Platform Maintenance). Try again later.

# Group User
This section containts all the methods for manipulating a user profile. **To be continued**

## Signup [/api/v1/signup]

### Create a new user [POST]
+ Request (application/json)

        { 
            "user": 
                { 
                    "name":"Chair",
                    "email":"chair@chair.com", 
                    "password":"password", 
                    "password_confirmation":"password" 
                } 
        }

+ Response 201 (application/json)

        {   
            "status_code":201,
            "message":"You have signed up successfully!",
            "content":"sLKlK8koTaYSjBRZ-ORkdg"
        }

## Authentication [/api/v1/signin]
Use this resource in order to login or logout from the API.

### Create a new session - Login [POST]
In order to access resources from this API you will need firstly to create a
session. In order to be able to create a session you previously should have
signed up.After sining up, use this resource by submitting the email and the
password that you have provided signing up. The API will provide you an 
access token which will have to be sent with each request.
+ Request (application/json)

        { 
            "session": 
                { 
                    "email":"chair@chair.com", 
                    "password":"password" 
                } 
        }
    
+ Response 201 (application/json)
    + Body

            { 
                "status_code":201,
                "message":"You have signed in successfully!",
                "content":"sLKlK8koTaYSjBRZ-ORkdg"   
            }

### Destroy a session - Logout [DELETE]
Use this resource for distroying a session.
+ Response 200 (application/json)
    + Body
    
            {
                "status_code":200,
                "message":"Session deleted successfuly",
                "content":""
            }

#Group Project
Use this resource for adding, updating, deleting or just retrieval of 
projects.

# Project properties

*   id (integer): Project id
*   name (string): Project name
*   created_at (date): Date of project creation
*   updated_at (date): Date of last project update
*   url (uri): URL of current project
*   decisions_url (uri): URL for accessing the decisions of a project

## GET /api/v1/projects/{?remember_token}
Use this resource for retrieving all the projects existing in the API.

+ Parameters
     + remember_token (string) ... The access token.

+ Response 200 (application/json)
    + Body 
    
            [
                {
                    "id":1,
                    "name":"This is a project",
                    "created_at":"",
                    "updated_at":"",
                    "url":"http://localhost:3000/api/v1/projects/1",
                    "decisions_url":"http://localhost:3000/api/v1/projects/1/decisions",
                }
            ]

## POST /api/v1/projects{?remember_token}
Use this resource for adding a new project.

+ Parameters
    + remember_token (string) ... The access token.

+ Request (application/json)

        { 
            "decision": 
                { 
                    "name": "This is a project"
                } 
        }
    
+ Response 200 (application/json)
    + Body
        
            [
                { 
                    "status_code":201,
                    "message":"Project created!",
                    "content":""
                }   
            ]

## GET /api/v1/projects/{id}{?remember_token}
Use this resource for retrieving a certain project with a certain id.

+ Parameters
    + id (string) ... ID of a project.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body 
    
            [
                {
                    "id":1,
                    "name":"This is a project",
                    "created_at":"",
                    "updated_at":"",
                    "url":"http://localhost:3000/api/v1/projects/1",
                    "decisions_url":"http://localhost:3000/api/v1/projects/1/decisions",
                }
            ]

## PUT /api/v1/projects/{id}{?remember_token}
Use this resource for editing a project using its id.

+ Parameters
    + id (string) ... ID of a project.
    + remember_token (string) ... The access token.
    
+ Request (application/json)

        { 
            "project": 
                { 
                    "name": "This is a project"
                } 
        }

+ Response 200 (application/json)
    + Body
    
            {
                "status_code":200,
                "message":"Resource updated successfully!",
                "content":""
            }

## DELETE /api/v1/projects/{id}{?remember_token}
Use this resource for deleting a project using its id. 

+ Parameters
    + id (string) ... ID of a project.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body
    
            {
                "status_code":200,
                "message":"Resource deleted successfully!",
                "content":""
            }
    

#Group Decision
Use this resource for adding, updating, deleting or just retrieval of 
decisions.

# Decision properties

*   id (integer): Decision id
*   name (string): Decision name
*   created_at (date): Date of decision creation
*   updated_at (date): Date of last decision update
*   url (uri): URL of current decision
*   versions_url (uri): URL for accessing the versions of a decision
*   dependences_url (uri): URL for accessing the dependences where a decision is involved
*   project_url (uri): URL for accessing the project of a decision

## GET /api/v1/decisions/{?remember_token}
Use this resource for retrieving all the decisions existing in the API.

+ Parameters
     + remember_token (string) ... The access token.

+ Response 200 (application/json)
    + Body 
    
            [
                {
                    "id":1,
                    "name":"First",
                    "created_at":"",
                    "updated_at":"",
                    "url":"http://localhost:3000/api/v1/decisions/1",
                    "versions_url":"http://localhost:3000/api/v1/decisions/1/versions",
                    "dependences_url":http://localhost:3000/api/v1/decisions/1/dependences",
                    "project_url":http://localhost:3000/api/v1/decisions/1/project"
                }
            ]

## GET /api/v1/projects/{id}/decisions{?remember_token}
Use this resource for retrieving all the decisions that belongs to a certain project.

+ Parameters
    + id (string) ... ID of a project.
    + remember_token (string) ... The access token.

+ Response 200 (application/json)
    + Body 
    
            [
                {
                    "id":1,
                    "name":"First",
                    "created_at":"",
                    "updated_at":"",
                    "url":"http://localhost:3000/api/v1/decisions/1",
                    "versions_url":"http://localhost:3000/api/v1/decisions/1/versions",
                    "dependences_url":http://localhost:3000/api/v1/decisions/1/dependences",
                    "project_url":http://localhost:3000/api/v1/decisions/1/project"
                }
            ]

## POST /api/v1/decisions{?remember_token}
Use this resource for adding a new decision.

+ Parameters
    + remember_token (string) ... The access token.

+ Request (application/json)

        { 
            "decision": 
                { 
                    "name": "First", 
                    "group_id": "1", 
                    "project_id": "2"
                } 
        }
    
+ Response 200 (application/json)
    + Body

                "status_code":200,
                "message":"Resource created successfully!",
                "content":""


## GET /api/v1/decisions/{id}{?remember_token}
Use this resource for retrieving a certain decision with a certain id.

+ Parameters
    + id (string) ... ID of a decision.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body 
    
            [
                {
                    "id":1,
                    "name":"First",
                    "created_at":"",
                    "updated_at":"",
                    "url":"http://localhost:3000/api/v1/decisions/1",
                    "versions_url":"http://localhost:3000/api/v1/decisions/1/versions",
                    "dependences_url":http://localhost:3000/api/v1/decisions/1/dependences",
                    "project_url":http://localhost:3000/api/v1/decisions/1/project"
                }
            ]

## PUT /api/v1/decisions/{id}{?remember_token}
Use this resource for editing a decision using its id.

+ Parameters
    + id (string) ... ID of a decision.
    + remember_token (string) ... The access token.
    
+ Request (application/json)

        { 
            "decision": 
                { 
                    "name":"First", 
                    "group_id":"1", 
                    "project_id":"2"
                } 
        }

+ Response 200 (application/json)
    + Body
    
            {
                "status_code":200,
                "message":"Resource updated successfully!",
                "content":""
            }

## DELETE /api/v1/decisions/{id}{?remember_token}
Use this resource for deleting a decision using its id. 

+ Parameters
    + id (string) ... ID of a decision.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body
    
            {
                "status_code":200,
                "message":"Resource deleted successfully!",
                "content":""
            }
    
#Group Version
Use this resource for adding, updating, deleting or just retrieval of 
decisions versions.

# Version properties

*   id (integer): Version id
*   state (string): The state of the decision which version this is
*   problem (string): The problem that a version tries to solve
*   description (string): The descripton of a decision version
*   arguments (string): The arguments for adopting a decision version
*   created_at (date): Date of version creation
*   updated_at (date): Date of last version update
*   decision (object): The object representing the decision which version this is
*   url (uri): URL of current decision version
*   iteration_url (uri): URL for accessing the iteration of a decision version

## GET /api/v1/versions/{?remember_token}
Use this resource for retrieving all the decisions versions existing in the API.

+ Parameters
     + remember_token (string) ... The access token.

+ Response 200 (application/json)
    + Body 
    
            [
                {
                    "id":1,
                    "name":"First",
                    "created_at":"",
                    "updated_at":"",
                    "url":"http://localhost:3000/api/v1/decisions/1",
                    "versions_url":"http://localhost:3000/api/v1/decisions/1/versions",
                    "dependences_url":http://localhost:3000/api/v1/decisions/1/dependences",
                    "project_url":http://localhost:3000/api/v1/decisions/1/project"
                }
            ]

## GET /api/v1/decisions/{id}/versions{?remember_token}
Use this resource for retrieving all the versions that belongs to a certain decision.

+ Parameters
    + id (string) ... ID of a decision version.
    + remember_token (string) ... The access token.

+ Response 200 (application/json)
    + Body 
    
            [
                {
                    "id":1,
                    "name":"First",
                    "created_at":"",
                    "updated_at":"",
                    "url":"http://localhost:3000/api/v1/decisions/1",
                    "versions_url":"http://localhost:3000/api/v1/decisions/1/versions",
                    "dependences_url":http://localhost:3000/api/v1/decisions/1/dependences",
                    "project_url":http://localhost:3000/api/v1/decisions/1/project"
                }
            ]

## POST /api/v1/versions{?remember_token}
Use this resource for adding a new decision version.

+ Parameters
    + remember_token (string) ... The access token.

+ Request (application/json)

        { 
            "version": 
                { 
                    "state": "idea", 
                    "problem": "The problem", 
                    "description": "The description",
                    "arguments":"Some arguments",
                    "iteration_id":"1",
                    "decision_id":"1"
                } 
        }
    
+ Response 200 (application/json)
    + Body

            { 
                "status_code":200,
                "message":"Resource created successfully!",
                "content":""
            }


## GET /api/v1/versions/{id}{?remember_token}
Use this resource for retrieving a certain decision version with a certain id.

+ Parameters
    + id (string) ... ID of a version.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body 
    
            [
                {
                    "id":1,
                    "name":"First",
                    "created_at":"",
                    "updated_at":"",
                    "url":"http://localhost:3000/api/v1/decisions/1",
                    "versions_url":"http://localhost:3000/api/v1/decisions/1/versions",
                    "dependences_url":http://localhost:3000/api/v1/decisions/1/dependences",
                    "project_url":http://localhost:3000/api/v1/decisions/1/project"
                }
            ]

## PUT /api/v1/versions/{id}{?remember_token}
Use this resource for editing a decision version using its id.

+ Parameters
    + id (string) ... ID of a version.
    + remember_token (string) ... The access token.
    
+ Request (application/json)

        { 
            "version": 
                { 
                    "state": "idea", 
                    "problem": "The problem", 
                    "description": "The description",
                    "arguments":"Some arguments",
                    "iteration_id":"1",
                    "decision_id":"1"
                } 
        }

+ Response 200 (application/json)
    + Body
    
            {
                "status_code":200,
                "message":"Resource updated successfully!",
                "content":""
            }

## DELETE /api/v1/versions/{id}{?remember_token}
Use this resource for deleting a decision version using its id. 

+ Parameters
    + id (string) ... ID of a version.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body
    
            {
                "status_code":200,
                "message":"Resource deleted successfully!",
                "content":""
            }

#Group Iteration
Use this resource for adding, updating, deleting or just retrieval of 
iterations.

# Iteration properties

*   id (integer): Version id
*   name (string): The name of the itaeration
*   description (string): The description of the itaration
*   created_at (date): Date of iteration creation
*   updated_at (date): Date of last iteration update
*   url (uri): URL of the iteration
*   versions_url (uri): URL for accessing the versions of a iteration
*   project_url (uri): URL for accessing the project which the iteration belogs to

## GET /api/v1/iterations/{?remember_token}
Use this resource for retrieving all the iterations existing in the API.

+ Parameters
     + remember_token (string) ... The access token.

+ Response 200 (application/json)
    + Body 
    
        [
            {
                id: 1,
                name: "First iteration",
                description: "A description",
                created_at: "2014-06-21T12:13:10.344Z",
                updated_at: "2014-06-21T12:13:10.344Z",
                url: "http://localhost:3000/api/v1/iterations/1",
                versions_url: "http://localhost:3000/api/v1/iterations/1/versions",
                project_url: "http://localhost:3000/api/v1/projects/1"
            }
        ]

## POST /api/v1/iterations{?remember_token}
Use this resource for adding a new iteration.

+ Parameters
    + remember_token (string) ... The access token.

+ Request (application/json)

        { 
            "iteration": 
                { 
                    "name": "First iteration", 
                    "description": "A description",
                    "project_id": 1
                } 
        }
    
+ Response 200 (application/json)
    + Body

        [
            {
                id: 1,
                name: "First iteration",
                description: "A description",
                created_at: "2014-06-21T12:13:10.344Z",
                updated_at: "2014-06-21T12:13:10.344Z",
                url: "http://localhost:3000/api/v1/iterations/1",
                versions_url: "http://localhost:3000/api/v1/iterations/1/versions",
                project_url: "http://localhost:3000/api/v1/projects/1"
            }
        ]

## GET /api/v1/iterations/{id}{?remember_token}
Use this resource for retrieving a certain iteration with a certain id.

+ Parameters
    + id (string) ... ID of an iteration.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body 
    
            [
                {
                    id: 1,
                    name: "First iteration",
                    description: "A description",
                    created_at: "2014-06-21T12:13:10.344Z",
                    updated_at: "2014-06-21T12:13:10.344Z",
                    url: "http://localhost:3000/api/v1/iterations/1",
                    versions_url: "http://localhost:3000/api/v1/iterations/1/versions",
                    project_url: "http://localhost:3000/api/v1/projects/1"
                }
            ]

## PUT /api/v1/iterations/{id}{?remember_token}
Use this resource for editing an iteration using its id.

+ Parameters
    + id (string) ... ID of an iteration.
    + remember_token (string) ... The access token.
    
+ Request (application/json)

        [ 
            "iteration": 
                { 
                    "name": "Second iteration", 
                    "description": "Another description",
                    "project_id": 1
                } 
        ]

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "status_code":200,
                    "message":"Resource updated successfully!",
                    "content":""
                }
            ]

## DELETE /api/v1/iterations/{id}{?remember_token}
Use this resource for deleting an iteration using its id. 

+ Parameters
    + id (string) ... ID of a iteration.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body
    
            [
                {
                    "status_code":200,
                    "message":"Resource deleted successfully!",
                    "content":""
                }
            ]

#Group Group    

#Group Dependence
Use this resource for adding, updating, deleting or just retrieval of 
dependences between decisions.

# Dependence properties

*   id (integer): Version id
*   relationship (string): The relationship between origin and target decision
*   created_at (date): Date of dependence creation
*   updated_at (date): Date of last dependence update
*   url (uri): URL of current dependence
*   origin decision: Origin decision of the dependence
*   target decision: Target decision of the dependence

## GET /api/v1/dependences/{?remember_token}
Use this resource for retrieving all the dependences existing in the API.

+ Parameters
     + remember_token (string) ... The access token.

+ Response 200 (application/json)
    + Body 
    
            [
                {
                    id: 2,
                    relationship: "depends_on",
                    created_at: "2014-06-21T09:58:16.904Z",
                    updated_at: "2014-06-21T09:58:16.904Z",
                    url: "http://localhost:3000/api/v1/dependences/2",
                    origin_decision: {
                        name: "First decision",
                        url: "http://localhost:3000/api/v1/decisions/1"
                    },
                    target_decision: {
                        name: "Second decision",
                        url: "http://localhost:3000/api/v1/decisions/2"
                    }
                },
                {
                    id: 3,
                    relationship: "depends_on",
                    created_at: "2014-06-21T09:58:53.803Z",
                    updated_at: "2014-06-21T09:58:53.803Z",
                    url: "http://localhost:3000/api/v1/dependences/3",
                    origin_decision: {
                        name: "First decision",
                        url: "http://localhost:3000/api/v1/decisions/1"
                    },
                    target_decision: {
                        name: "Second decision",
                        url: "http://localhost:3000/api/v1/decisions/2"
                    }
                }
            ]

## GET /api/v1/decisions/{id}/dependences{?remember_token}
Use this resource for retrieving all the dependences that involve a certain decision as an origin or target decision.

+ Parameters
    + id (string) ... ID of a dependence.
    + remember_token (string) ... The access token.

+ Response 200 (application/json)
    + Body 
    
            [
                {
                    id: 2,
                    relationship: "depends_on",
                    created_at: "2014-06-21T09:58:16.904Z",
                    updated_at: "2014-06-21T09:58:16.904Z",
                    url: "http://localhost:3000/api/v1/dependences/2",
                    origin_decision: {
                        name: "First decision",
                        url: "http://localhost:3000/api/v1/decisions/1"
                    },
                    target_decision: {
                        name: "Second decision",
                        url: "http://localhost:3000/api/v1/decisions/2"
                    }
                }
            ]


## POST /api/v1/dependences{?remember_token}
Use this resource for adding a new dependence

+ Parameters
    + remember_token (string) ... The access token.

+ Request (application/json)

        { 
            "dependence": 
                { 
                    "relationship": "depends on", 
                    "origin_id": 1,
                    "target_id": 2
                } 
        }
    
+ Response 200 (application/json)
    + Body

            [
                {
                    id: 2,
                    relationship: "depends_on",
                    created_at: "2014-06-21T09:58:16.904Z",
                    updated_at: "2014-06-21T09:58:16.904Z",
                    url: "http://localhost:3000/api/v1/dependences/2",
                    origin_decision: {
                        name: "First decision",
                        url: "http://localhost:3000/api/v1/decisions/1"
                    },
                    target_decision: {
                        name: "Second decision",
                        url: "http://localhost:3000/api/v1/decisions/2"
                    }
                }
            ]

## GET /api/v1/dependences/{id}{?remember_token}
Use this resource for retrieving a certain dependence with a certain id.

+ Parameters
    + id (string) ... ID of a dependence.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body 
    
            [
                {
                    id: 2,
                    relationship: "depends_on",
                    created_at: "2014-06-21T09:58:16.904Z",
                    updated_at: "2014-06-21T09:58:16.904Z",
                    url: "http://localhost:3000/api/v1/dependences/2",
                    origin_decision: {
                        name: "First decision",
                        url: "http://localhost:3000/api/v1/decisions/1"
                    },
                    target_decision: {
                        name: "Second decision",
                        url: "http://localhost:3000/api/v1/decisions/2"
                    }
                }
            ]

## PUT /api/v1/dependences/{id}{?remember_token}
Use this resource for editing a dependence using its id.

+ Parameters
    + id (string) ... ID of a dependence.
    + remember_token (string) ... The access token.
    
+ Request (application/json)

        [ 
            "deoendence": 
                { 
                    "relationship": "depends on", 
                    "origin_id": 1,
                    "target_id": 3
                } 
        ]

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "status_code":200,
                    "message":"Resource updated successfully!",
                    "content":""
                }
            ]

## DELETE /api/v1/stakeholders/{id}{?remember_token}
Use this resource for deleting a dependence using its id. 

+ Parameters
    + id (string) ... ID of a dependence.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body
    
            [
                {
                    "status_code":200,
                    "message":"Resource deleted successfully!",
                    "content":""
                }
            ]


#Group Stakeholder
Use this resource for adding, updating, deleting or just retrieval of 
stakeholders.

# Stakeholder properties

*   id (integer): Version id
*   name (string): The name of the stakeholder
*   function (string): The function that the stakeholder holds in the project
*   created_at (date): Date of stakeholder creation
*   updated_at (date): Date of last stakeholder update
*   url (uri): URL of current stakeholder
*   actions_url (uri): URL for accessing the actions of a stakeholder

## GET /api/v1/stakeholders/{?remember_token}
Use this resource for retrieving all the stakeholders existing in the API.

+ Parameters
     + remember_token (string) ... The access token.

+ Response 200 (application/json)
    + Body 
    
            [
                {
                    id: 1,
                    name: "John",
                    function: "Manager",
                    created_at: "2014-07-05T13:51:43.528Z",
                    updated_at: "2014-07-05T13:51:43.528Z",
                    url: "http://localhost:3000/api/v1/stakeholders/1",
                    actions_url: "http://localhost:3000/api/v1/stakeholders/1/actions"
                },
                {
                    id: 2,
                    name: "Mark",
                    function: "Developer",
                    created_at: "2014-07-05T13:53:11.016Z",
                    updated_at: "2014-07-05T13:53:11.016Z",
                    url: "http://localhost:3000/api/v1/stakeholders/2",
                    actions_url: "http://localhost:3000/api/v1/stakeholders/2/actions"
                }
            ]

## POST /api/v1/stakeholders{?remember_token}
Use this resource for adding a new stakeholder.

+ Parameters
    + remember_token (string) ... The access token.

+ Request (application/json)

        { 
            "stakeholder": 
                { 
                    "name": "John", 
                    "function": "Manager"
                } 
        }
    
+ Response 200 (application/json)
    + Body

            [
                {
                    id: 1,
                    name: "John",
                    function: "Manager",
                    created_at: "2014-07-05T13:51:43.528Z",
                    updated_at: "2014-07-05T13:51:43.528Z",
                    url: "http://localhost:3000/api/v1/stakeholders/1",
                    actions_url: "http://localhost:3000/api/v1/stakeholders/1/actions"
                }
            ]

## GET /api/v1/stakeholders/{id}{?remember_token}
Use this resource for retrieving a certain stakeholder with a certain id.

+ Parameters
    + id (string) ... ID of a stakeholder.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body 
    
            [
                {
                    id: 1,
                    name: "John",
                    function: "Manager",
                    created_at: "2014-07-05T13:51:43.528Z",
                    updated_at: "2014-07-05T13:51:43.528Z",
                    url: "http://localhost:3000/api/v1/stakeholders/1",
                    actions_url: "http://localhost:3000/api/v1/stakeholders/1/actions"
                }
            ]

## PUT /api/v1/stakeholders/{id}{?remember_token}
Use this resource for editing a stakeholder using its id.

+ Parameters
    + id (string) ... ID of a stakeholder.
    + remember_token (string) ... The access token.
    
+ Request (application/json)

        [ 
            "stakeholder": 
                { 
                    "name": "John", 
                    "function": "Manager", 
                } 
        ]

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "status_code":200,
                    "message":"Resource updated successfully!",
                    "content":""
                }
            ]

## DELETE /api/v1/stakeholders/{id}{?remember_token}
Use this resource for deleting a stakeholder using its id. 

+ Parameters
    + id (string) ... ID of a stakeholder.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body
    
            [
                {
                    "status_code":200,
                    "message":"Resource deleted successfully!",
                    "content":""
                }
            ]

#Group Action
Use this resource for adding, updating, deleting or just retrieval of 
actions that stakeholders did regarding certain decisions.

# Action properties

*   id (integer): Action id
*   action (string): The action that the stakeholder did
*   created_at (date): Date of stakeholder creation
*   updated_at (date): Date of last stakeholder update
*   url (uri): URL of current stakeholder
*   stakeholder: Stakeholder that did the action 
*   version: Version that was affected by current action

## GET /api/v1/actions/{?remember_token}
Use this resource for retrieving all the actions existing in the API.

+ Parameters
     + remember_token (string) ... The access token.

+ Response 200 (application/json)
    + Body 
   
            [ 
                {
                    id: 1,
                    action: "propose",
                    created_at: "2014-07-05T14:51:15.131Z",
                    updated_at: "2014-07-05T14:51:15.131Z",
                    url: "http://localhost:3000/api/v1/actions/1",
                    stakeholder: {
                        id: 1,
                        name: "John",
                        function: "Manager",
                        created_at: "2014-07-05T13:51:43.528Z",
                        updated_at: "2014-07-05T13:51:43.528Z",
                        url: "http://localhost:3000/api/v1/stakeholders/1",
                        actions_url: "http://localhost:3000/api/v1/stakeholders/1/actions"
                    },
                    version: {
                        id: 1,
                        state: "proposed",
                        problem: "A problem",
                        description: "A description",
                        arguments: "Some arguments",
                        created_at: "2014-06-21T12:15:29.899Z",
                        updated_at: "2014-07-05T14:49:15.055Z",
                        url: "http://localhost:3000/api/v1/versions/1",
                        iteration_url: "http://localhost:3000/api/v1/iterations/1",
                        decision: {
                            id: 1,
                            name: "First decision",
                            created_at: "2014-06-21T09:51:10.243Z",
                            updated_at: "2014-06-21T09:55:36.110Z",
                            url: "http://localhost:3000/api/v1/decisions/1",
                            versions_url: "http://localhost:3000/api/v1/decisions/1/versions",
                            dependences_url: "http://localhost:3000/api/v1/decisions/1/dependences",
                            project_url: "http://localhost:3000/api/v1/projects/1",
                            group_url: "http://localhost:3000/api/v1/groups/1"
                        }
                    }
                }
            ]

## POST /api/v1/actions{?remember_token}
Use this resource for adding a new action.

+ Parameters
    + remember_token (string) ... The access token.

+ Request (application/json)

        { 
            "my_action": 
                { 
                    "action": "propose", 
                    "stakeholder_id": 1,
                    "version_id": 1
                } 
        }
    
+ Response 200 (application/json)
    + Body

            [ 
                {
                    id: 1,
                    action: "propose",
                    created_at: "2014-07-05T14:51:15.131Z",
                    updated_at: "2014-07-05T14:51:15.131Z",
                    url: "http://localhost:3000/api/v1/actions/1",
                    stakeholder: {
                        id: 1,
                        name: "John",
                        function: "Manager",
                        created_at: "2014-07-05T13:51:43.528Z",
                        updated_at: "2014-07-05T13:51:43.528Z",
                        url: "http://localhost:3000/api/v1/stakeholders/1",
                        actions_url: "http://localhost:3000/api/v1/stakeholders/1/actions"
                    },
                    version: {
                        id: 1,
                        state: "proposed",
                        problem: "A problem",
                        description: "A description",
                        arguments: "Some arguments",
                        created_at: "2014-06-21T12:15:29.899Z",
                        updated_at: "2014-07-05T14:49:15.055Z",
                        url: "http://localhost:3000/api/v1/versions/1",
                        iteration_url: "http://localhost:3000/api/v1/iterations/1",
                        decision: {
                            id: 1,
                            name: "First decision",
                            created_at: "2014-06-21T09:51:10.243Z",
                            updated_at: "2014-06-21T09:55:36.110Z",
                            url: "http://localhost:3000/api/v1/decisions/1",
                            versions_url: "http://localhost:3000/api/v1/decisions/1/versions",
                            dependences_url: "http://localhost:3000/api/v1/decisions/1/dependences",
                            project_url: "http://localhost:3000/api/v1/projects/1",
                            group_url: "http://localhost:3000/api/v1/groups/1"
                        }
                    }
                }
            ]

## GET /api/v1/actions/{id}{?remember_token}
Use this resource for retrieving a certain action with a certain id.

+ Parameters
    + id (string) ... ID of an action.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body 
    
            [ 
                {
                    id: 1,
                    action: "propose",
                    created_at: "2014-07-05T14:51:15.131Z",
                    updated_at: "2014-07-05T14:51:15.131Z",
                    url: "http://localhost:3000/api/v1/actions/1",
                    stakeholder: {
                        id: 1,
                        name: "John",
                        function: "Manager",
                        created_at: "2014-07-05T13:51:43.528Z",
                        updated_at: "2014-07-05T13:51:43.528Z",
                        url: "http://localhost:3000/api/v1/stakeholders/1",
                        actions_url: "http://localhost:3000/api/v1/stakeholders/1/actions"
                    },
                    version: {
                        id: 1,
                        state: "proposed",
                        problem: "A problem",
                        description: "A description",
                        arguments: "Some arguments",
                        created_at: "2014-06-21T12:15:29.899Z",
                        updated_at: "2014-07-05T14:49:15.055Z",
                        url: "http://localhost:3000/api/v1/versions/1",
                        iteration_url: "http://localhost:3000/api/v1/iterations/1",
                        decision: {
                            id: 1,
                            name: "First decision",
                            created_at: "2014-06-21T09:51:10.243Z",
                            updated_at: "2014-06-21T09:55:36.110Z",
                            url: "http://localhost:3000/api/v1/decisions/1",
                            versions_url: "http://localhost:3000/api/v1/decisions/1/versions",
                            dependences_url: "http://localhost:3000/api/v1/decisions/1/dependences",
                            project_url: "http://localhost:3000/api/v1/projects/1",
                            group_url: "http://localhost:3000/api/v1/groups/1"
                        }
                    }
                }
            ]

## PUT /api/v1/actions/{id}{?remember_token}
Use this resource for editing an action using its id.

+ Parameters
    + id (string) ... ID of an action.
    + remember_token (string) ... The access token.
    
+ Request (application/json)

        { 
            "my_action": 
                { 
                    "action": "propose", 
                    "stakeholder_id": 1,
                    "version_id": 1
                } 
        }

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "status_code":200,
                    "message":"Resource updated successfully!",
                    "content":""
                }
            ]

## DELETE /api/v1/actions/{id}{?remember_token}
Use this resource for deleting an action using its id. 

+ Parameters
    + id (string) ... ID of an action.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body
    
            [
                {
                    "status_code":200,
                    "message":"Resource deleted successfully!",
                    "content":""
                }
            ]

#Group Impact
Use this resource for adding, updating, deleting or just retrieval of 
impacts that forces have on taking certain decisions.

# Impact properties

*   id (integer): Impact id
*   description (string): Description of impact
*   created_at (date): Date of impact creation
*   updated_at (date): Date of last impact update
*   url (uri): URL of current impact
*   decision: Decision that was influenced by the force
*   force: Force that influenced the decision

## GET /api/v1/impacts/{?remember_token}
Use this resource for retrieving all the impacts existing in the API.

+ Parameters
     + remember_token (string) ... The access token.

+ Response 200 (application/json)
    + Body 
   
            [ 
                {
                    id: 1,
                    description: "A description",
                    created_at: "2014-07-05T14:51:15.131Z",
                    updated_at: "2014-07-05T14:51:15.131Z",
                    url: "http://localhost:3000/api/v1/impacts/1",
                    decision: {
                        "id":1,
                        "name":"First",
                        "created_at":"2014-07-05T14:51:15.131Z",
                        "updated_at":"2014-07-05T14:51:15.131Z",
                        "url":"http://localhost:3000/api/v1/decisions/1",
                        "versions_url":"http://localhost:3000/api/v1/decisions/1/versions",
                        "dependences_url":http://localhost:3000/api/v1/decisions/1/dependences",
                        "project_url":http://localhost:3000/api/v1/decisions/1/project"
                    },
                    force: {
                        "id":1,
                        "name":"First",
                        "created_at":"2014-07-05T14:51:15.131Z",
                        "updated_at":"2014-07-05T14:51:15.131Z",
                        "url":"http://localhost:3000/api/v1/force/1",
                        "impacts_url":"http://localhost:3000/api/v1/force/1/impacts",
                        "concern": {
                            "id":1,
                            "name":"First",
                            "created_at":"2014-07-05T14:51:15.131Z",
                            "updated_at":"2014-07-05T14:51:15.131Z",
                            "url":"http://localhost:3000/api/v1/concern/1",
                            "forces_url":"http://localhost:3000/api/v1/concern/1/forces",
                        }
                    }
                }
            ]

## POST /api/v1/impacts{?remember_token}
Use this resource for adding a new impact.

+ Parameters
    + remember_token (string) ... The access token.

+ Request (application/json)

        { 
            "impact": 
                { 
                    "description": "A description", 
                    "decision_id": 1,
                    "force_id": 1
                } 
        }
    
+ Response 200 (application/json)
    + Body

            [ 
                {
                    id: 1,
                    description: "A description",
                    created_at: "2014-07-05T14:51:15.131Z",
                    updated_at: "2014-07-05T14:51:15.131Z",
                    url: "http://localhost:3000/api/v1/impacts/1",
                    decision: {
                        "id":1,
                        "name":"First",
                        "created_at":"2014-07-05T14:51:15.131Z",
                        "updated_at":"2014-07-05T14:51:15.131Z",
                        "url":"http://localhost:3000/api/v1/decisions/1",
                        "versions_url":"http://localhost:3000/api/v1/decisions/1/versions",
                        "dependences_url":http://localhost:3000/api/v1/decisions/1/dependences",
                        "project_url":http://localhost:3000/api/v1/decisions/1/project"
                    },
                    force: {
                        "id":1,
                        "name":"First",
                        "created_at":"2014-07-05T14:51:15.131Z",
                        "updated_at":"2014-07-05T14:51:15.131Z",
                        "url":"http://localhost:3000/api/v1/force/1",
                        "impacts_url":"http://localhost:3000/api/v1/force/1/impacts",
                        "concern": {
                            "id":1,
                            "name":"First",
                            "created_at":"2014-07-05T14:51:15.131Z",
                            "updated_at":"2014-07-05T14:51:15.131Z",
                            "url":"http://localhost:3000/api/v1/concern/1",
                            "forces_url":"http://localhost:3000/api/v1/concern/1/forces",
                        }
                    }
                }
            ]

## GET /api/v1/impacts/{id}{?remember_token}
Use this resource for retrieving a certain impact with a certain id.

+ Parameters
    + id (string) ... ID of an impact.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body 
    
            [ 
                {
                    id: 1,
                    description: "A description",
                    created_at: "2014-07-05T14:51:15.131Z",
                    updated_at: "2014-07-05T14:51:15.131Z",
                    url: "http://localhost:3000/api/v1/impacts/1",
                    decision: {
                        "id":1,
                        "name":"First",
                        "created_at":"2014-07-05T14:51:15.131Z",
                        "updated_at":"2014-07-05T14:51:15.131Z",
                        "url":"http://localhost:3000/api/v1/decisions/1",
                        "versions_url":"http://localhost:3000/api/v1/decisions/1/versions",
                        "dependences_url":http://localhost:3000/api/v1/decisions/1/dependences",
                        "project_url":http://localhost:3000/api/v1/decisions/1/project"
                    },
                    force: {
                        "id":1,
                        "name":"First",
                        "created_at":"2014-07-05T14:51:15.131Z",
                        "updated_at":"2014-07-05T14:51:15.131Z",
                        "url":"http://localhost:3000/api/v1/force/1",
                        "impacts_url":"http://localhost:3000/api/v1/force/1/impacts",
                        "concern": {
                            "id":1,
                            "name":"First",
                            "created_at":"2014-07-05T14:51:15.131Z",
                            "updated_at":"2014-07-05T14:51:15.131Z",
                            "url":"http://localhost:3000/api/v1/concern/1",
                            "forces_url":"http://localhost:3000/api/v1/concern/1/forces",
                        }
                    }
                }
            ]

## PUT /api/v1/impacts/{id}{?remember_token}
Use this resource for editing an impact using its id.

+ Parameters
    + id (string) ... ID of an impact.
    + remember_token (string) ... The access token.
    
+ Request (application/json)

        { 
            "impact": 
                { 
                    "description": "A description", 
                    "decision_id": 1,
                    "force_id": 1
                } 
        }

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "status_code":200,
                    "message":"Resource updated successfully!",
                    "content":""
                }
            ]

## DELETE /api/v1/actions/{id}{?remember_token}
Use this resource for deleting an impact using its id. 

+ Parameters
    + id (string) ... ID of an impact.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body
    
            [
                {
                    "status_code":200,
                    "message":"Resource deleted successfully!",
                    "content":""
                }
            ]

#Group Force
Use this resource for adding, updating, deleting or just retrieval of 
forces.

# Force properties

*   id (integer): Force id
*   name (string): Name of force
*   created_at (date): Date of force creation
*   updated_at (date): Date of last force update
*   url (uri): URL of current force
*   impacts_url (uri): URL of impacts that the current force had on decisions
*   concern: Concern regarding the force

## GET /api/v1/forces/{?remember_token}
Use this resource for retrieving all the forces existing in the API.

+ Parameters
     + remember_token (string) ... The access token.

+ Response 200 (application/json)
    + Body 
   
            [ 
                {
                    "id":1,
                    "name":"First",
                    "created_at":"2014-07-05T14:51:15.131Z",
                    "updated_at":"2014-07-05T14:51:15.131Z",
                    "url":"http://localhost:3000/api/v1/force/1",
                    "impacts_url":"http://localhost:3000/api/v1/force/1/impacts",
                    "concern": {
                        "id":1,
                        "name":"First",
                        "created_at":"2014-07-05T14:51:15.131Z",
                        "updated_at":"2014-07-05T14:51:15.131Z",
                        "url":"http://localhost:3000/api/v1/concern/1",
                        "forces_url":"http://localhost:3000/api/v1/concern/1/forces",
                    }
                }
            ]

## POST /api/v1/forces{?remember_token}
Use this resource for adding a new forces.

+ Parameters
    + remember_token (string) ... The access token.

+ Request (application/json)

        { 
            "force": 
                { 
                    "name": "A force", 
                    "concern_id": 1
                } 
        }
    
+ Response 200 (application/json)
    + Body

            [ 
                {
                    "id":1,
                    "name":"A force",
                    "created_at":"2014-07-05T14:51:15.131Z",
                    "updated_at":"2014-07-05T14:51:15.131Z",
                    "url":"http://localhost:3000/api/v1/force/1",
                    "impacts_url":"http://localhost:3000/api/v1/force/1/impacts",
                    "concern": {
                        "id":1,
                        "name":"First",
                        "created_at":"2014-07-05T14:51:15.131Z",
                        "updated_at":"2014-07-05T14:51:15.131Z",
                        "url":"http://localhost:3000/api/v1/concern/1",
                        "forces_url":"http://localhost:3000/api/v1/concern/1/forces",
                    }
                }
            ]

## GET /api/v1/forces/{id}{?remember_token}
Use this resource for retrieving a certain force with a certain id.

+ Parameters
    + id (string) ... ID of a force.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body 
    
            [ 
                {
                    "id":1,
                    "name":"First",
                    "created_at":"2014-07-05T14:51:15.131Z",
                    "updated_at":"2014-07-05T14:51:15.131Z",
                    "url":"http://localhost:3000/api/v1/force/1",
                    "impacts_url":"http://localhost:3000/api/v1/force/1/impacts",
                    "concern": {
                        "id":1,
                        "name":"First",
                        "created_at":"2014-07-05T14:51:15.131Z",
                        "updated_at":"2014-07-05T14:51:15.131Z",
                        "url":"http://localhost:3000/api/v1/concern/1",
                        "forces_url":"http://localhost:3000/api/v1/concern/1/forces",
                    }
                }
            ]

## PUT /api/v1/forces/{id}{?remember_token}
Use this resource for editing a force using its id.

+ Parameters
    + id (string) ... ID of an force.
    + remember_token (string) ... The access token.
    
+ Request (application/json)

        { 
            "force": 
                { 
                    "name": "A force", 
                    "concern_id": 1
                } 
        }

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "status_code":200,
                    "message":"Resource updated successfully!",
                    "content":""
                }
            ]

## DELETE /api/v1/forces/{id}{?remember_token}
Use this resource for deleting a force using its id. 

+ Parameters
    + id (string) ... ID of a force.
    + remember_token (string) ... The access token.
    
+ Response 200 (application/json)
    + Body
    
            [
                {
                    "status_code":200,
                    "message":"Resource deleted successfully!",
                    "content":""
                }
            ]

#Group Concern